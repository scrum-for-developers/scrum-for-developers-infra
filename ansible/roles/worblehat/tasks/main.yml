#- name: Download Spring Boot Admin Server Servlet
#  shell: mvn dependency:get -Dartifact=de.codecentric:spring-boot-admin-sample-servlet:2.2.2

- name: Create spring-boot-admin directory
  become: true
  file: path="/opt/spring-boot-admin" state=directory owner=root group=root mode=0777

- name: Copy spring boot admin servlet example
  copy:
    src: spring-boot-admin/spring-boot-admin-sample-servlet-3.2.2.jar
    dest: /opt/spring-boot-admin/spring-boot-admin-sample-servlet.jar
    mode: 0777

- name: Copy spring boot admin service
  copy:
    src: spring-boot-admin/spring-boot-admin.service
    dest: /opt/spring-boot-admin/spring-boot-admin.service
    mode: 0777

- name: Copy spring-boot-admin application.conf
  template: src=spring-boot-admin/application.properties.j2 dest="/opt/spring-boot-admin/application.properties"

- name: Link Spring Boot Admin Server to /etc/init.d
  become: true
  file: src="/opt/spring-boot-admin/spring-boot-admin.service" dest="/etc/systemd/system/spring-boot-admin.service" mode=0777 state=link

- name: Start Spring Boot Admin
  become: true
  service: name=spring-boot-admin state=restarted

- include_tasks: worblehat.yml
  vars:
    worblehat_stage: "test"
    worblehat_port: "9100"

- name: Create a database for worblehat-test
  mysql_db:
    name: "worblehat_test"
    state: present
    login_user: root
    login_password: root

- include_tasks: worblehat.yml
  vars:
    worblehat_stage: "prod"
    worblehat_port: "9101"

- name: Create a database for worblehat-prod
  mysql_db:
    name: "worblehat_prod"
    state: present
    login_user: root
    login_password: root

- name: Create a database user for worblehat
  mysql_user:
    name: "worblehat"
    host: "localhost"
    priv: "*.*:ALL"
    password: "worblehat"
    login_user: root
    login_password: root

- name: Trigger Multibranch Scan in worblehat repository
  uri:
    url: http://{{ this_ip }}/jenkins/git/notifyCommit?url={{ git_url }}&token=2c69591b07a82fcb9710c0f84e2d7f50
    method: GET
    status_code: 200
  register: _result
  until: _result.status == 200
  retries: 12 # 12 * 10 seconds = 2 Minute
  delay: 10 # Every 10s

- name:
  debug:
    msg: "Please ensure to MANUALLY approve PROD DEPLOYMENT to make the build succeed. http://{{ this_ip }}/jenkins/login?from=%2Fjenkins%2Fblue%2Forganizations%2Fjenkins%2Fworblehat-pipelines%2Fdetail%2Fmaster%2F1%2Fpipeline%2F"

- name: wait until build has completed successfully
  uri:
    url: http://{{ this_ip }}/jenkins/job/worblehat-pipelines/job/master/api/json
    method: GET
    status_code: 200
    body_format: json
  register: result
  until: (result.json.color is defined) and (result.json.color == "blue")
  retries: 60
  delay: 15