- name: Create EC2 instance
  amazon.aws.ec2_instance:
    name: "sfd-{{ instance_name }}"
    instance_type: m5.xlarge
    key_name: "{{ ec2_key_name }}"
    region: "{{ ec2_region }}"
    image_id: "{{ ec2_ami_id }}"
    security_group: "{{ ec2_security_group }}"
    exact_count: 1
    # https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_instance_module.html#parameter-filters
    filters:
      "tag:Name": "sfd-{{ instance_name }}"
      "instance-state-name": "running"
    tags:
      ScrumForDevelopersImage: "ScrumForDevelopersImage"
      SfdTeamTitle: "{{ team_title }}"
      SfdGitUrl: "{{ git_url }}"
      SfdGitWebUrl: "{{ git_web_url }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_size: 24
          delete_on_termination: true
    wait: yes
  register: ec2

- name: Debug created instance
  debug: var=ec2

- name: Wait for SSH to come up
  delegate_to: "{{ instance.public_dns_name }}"
  # https://docs.ansible.com/ansible/2.9/modules/wait_for_connection_module.html
  wait_for_connection:
    delay: 10    # initial waiting time
    sleep: 60    # sleep between checks
    timeout: 320 # maximum waiting time
  loop: "{{ ec2.instances }}"
  loop_control:
    loop_var: instance


- name: Assign elastic ip
  community.aws.ec2_eip:
    region: "{{ ec2_region }}"
    reuse_existing_ip_allowed: yes
    in_vpc: yes
    release_on_disassociation: yes
    device_id: "{{ ec2.instance_ids[0] }}"
  register: eip
  when: ec2.changed

- name: Debug elastic ip
  debug: var=eip

- name: Save elastic ip as tag
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ ec2.instance_ids[0] }}"
    tags:
      SfdElasticIp: "{{ eip.public_ip }}"
  when: eip.changed
